library(readr)
install.packages("readr")
# install.packages("readr")
library(readr)
getwd() #obtener el directorio en el que estas
data <- read.csv("coches.csv")
head(data)
names(data)
attach(data) #esto es para q cuando menciones una de las variables, no tengas q poner data$prize sino q puedes llamarla cuando quieras
library(ggplot2)
class(Year)
unique(Year)
h <- hist(Year)
h
sum(Year==2002)
boxplot(Year,horizontal = TRUE)
ggplot(data, aes(x=Year)) + geom_histogram(binwidth = 0.4,  fill="blue", colour="black")
ggplot(data, aes(x=Year)) + geom_histogram(aes(y=..density..), binwidth = 0.4,  fill="blue", colour="black")+geom_density(colour="green", fill="green",alpha=0.3)
names(data)
class(Kilometers_Driven)
unique(Kilometers_Driven)
sum(Kilometers_Driven>=55000)
summary(Kilometers_Driven) #7253 es el total
boxplot(Kilometers_Driven) # ese valor atípico q sale deberiamos plantearnos q hacer con él, es un valor excesivamente alto
which(Kilometers_Driven==6500000) #posicion del valor atipico
Kilometers_Driven
kilometers <- Kilometers_Driven[-2329] #quito ese valor, solo por probar, yo le estudiaría aparte
summary(kilometers)
hist(kilometers)
boxplot(kilometers, horizontal=TRUE)
k <- hist(kilometers)
k
names(data)
class(Kilometers_Driven)
unique(Kilometers_Driven)
sum(Kilometers_Driven>=55000)
summary(Kilometers_Driven) #7253 es el total
boxplot(Kilometers_Driven) # ese valor atípico q sale deberiamos plantearnos q hacer con él, es un valor excesivamente alto
which(Kilometers_Driven==6500000) #posicion del valor atipico
Kilometers_Driven
kilometers <- Kilometers_Driven[-2329] #quito ese valor, solo por probar, yo le estudiaría aparte
summary(kilometers)
hist(kilometers)
boxplot(kilometers, horizontal=TRUE)
k <- hist(kilometers)
k
names(data)
class(Fuel_Type)
Fuel_Type
unique(Fuel_Type)
ggplot(data, aes(x=Fuel_Type)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black")
summary(Fuel_Type)
class(Name)
Name
unique(Name)
summary(Name)
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
library(dplyr)
class(Transmission)
Transmission
summary(Transmission)
ggplot(data, aes(x=Transmission)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
##podemos añadir tambien el porcentaje de los que son de cada tipo
class(Owner_Type)
summary(Owner_Type)
ggplot(data, aes(x=Owner_Type)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
glimpse(data)
md.pattern(data, rotate.names=TRUE)
library(mice)
install.packages("mice")
library(mice)
md.pattern(data, rotate.names=TRUE)
md.pattern(data, rotate.names=FALSE)
md.pattern(data, rotate.names=TRUE)
md.pattern(data, plot = FALSE, rotate.names=TRUE)
md.pattern(data, plot = TRUE, rotate.names=TRUE)
getwd() #obtener el directorio en el que estas
data <- read.csv("coches.csv")
head(data)
names(data)
attach(data) #esto es para q cuando menciones una de las variables, no tengas q poner data$prize sino q puedes llamarla cuando quieras
md.pattern(data, plot = TRUE, rotate.names=TRUE)
is.na(data)
md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(data))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(New_Price))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(New_Price))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(Seats))
#md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
data %>% select(Name, Engine, Seats, Power) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power)) %>% arrange(Name) %>% distinct()
data %>% select(Name, Engine, Seats, Power) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power)) %>% arrange(Name) %>% distinct()
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
data %>% select(Name, Engine, Seats, Power) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power)) %>% arrange(Name) %>% distinct()
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
data %>% select(Name, Engine, Seats, Power, New_Price, Price) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power) | is.na(New_Price) | is.na(Price)) %>% arrange(Name) %>% distinct()
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
data %>% select(Name, Engine, Seats, Power, New_Price, Price) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power) | is.na(New_Price) | is.na(Price)) %>% arrange(Name) %>% distinct()
coches[!sapply(coches, function(x) all(x == ""))]
sum(is.na(Seats))
md.pattern(data, plot = TRUE, rotate.names=TRUE)
data %>% select(Name, Engine, Seats, Power, New_Price, Price) %>% filter(is.na(Engine) | is.na(Seats) | is.na(Power) | is.na(New_Price) | is.na(Price)) %>% arrange(Name) %>% distinct()
data[!sapply(data, function(x) all(x == ""))]
data[!sapply(data, function(x) all(x == ""))]
data[!sapply(data, function(x) all(x == ""))] #Así identificamos las columnas que tienen valores faltantes
data[!sapply(data, function(x) all(x == ""))] #Así identificamos las columnas que tienen valores faltantes
scan(what = " ")
sum(is.na(data))
sum(is.empty(data))
sum(is.na(data))
sum(is.empty(data))
sum(is.na(data))
is.empty(data)
install.packages("rapport")
library(dplyr)
# install.packages("readr")
library(readr)
# install.packages("mice")
library(mice)
# install.packages("rapport")
library(rapport)
sum(is.na(data))
is.empty(data)
library(dplyr)
# install.packages("readr")
library(readr)
# install.packages("mice")
library(mice)
# install.packages("rapport")
library(rapport)
sum(is.na(data))
is.empty(data)
names(data)
class(Fuel_Type)
Fuel_Type
unique(Fuel_Type)
ggplot(data, aes(x=Fuel_Type)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black")
summary(Fuel_Type)
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
ggplot(aes(Location, Price))+geom_boxplot()+geom_jitter(alpha=0.1)+scale_y_log10()
getwd() #obtener el directorio en el que estas
data <- read.csv("coches.csv")
head(data)
names(data)
attach(data) #esto es para q cuando menciones una de las variables, no tengas q poner data$prize sino q puedes llamarla cuando quieras
glimpse(data)
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
ggplot(aes(Location, Price))+geom_boxplot()+geom_jitter(alpha=0.1)+scale_y_log10()
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
data %>%ggplot(aes(Location, Price))+geom_boxplot()+geom_jitter(alpha=0.1)+scale_y_log10()
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
ggplot(data, aes(Location, Price))+geom_boxplot()+geom_jitter(alpha=0.1)+scale_y_log10()
class(Location)
summary(Location)
ggplot(data, aes(x=Location)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
class(Name)
#Name
unique(Name)
summary(Name)
#class(Name)
Name
unique(Name)
summary(Name)
class(Transmission)
Transmission
summary(Transmission)
ggplot(data, aes(x=Transmission)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
##podemos añadir tambien el porcentaje de los que son de cada tipo
class(Owner_Type)
summary(Owner_Type)
ggplot(data, aes(x=Owner_Type)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
class(Mileage)
summary(Mileage)
unique(Mileage)
class(Mileage)
summary(Mileage)
unique(Mileage)
ggplot(data, aes(x=Mileage)) + geom_histogram(stat="count",binwidth = 0.4,  fill="blue", colour="black", ordered=TRUE)
class(Mileage)
summary(Mileage)
unique(Mileage)
ggplot(data, aes(x=Mileage)) + geom_point()
class(Mileage)
summary(Mileage)
unique(Mileage)
ggplot(data, aes(x=Mileage, y = Price)) + geom_point()
class(Engine)
summary(Engine)
unique(Engine)
ggplot(data, aes(x=Engine)) + geom_histogram(stat="count",binwidth = 0.2,  fill="blue", colour="black", ordered=TRUE)
class(Power)
summary(Power)
unique(Power)
class(Power)
summary(Power)
unique(Power)
ggplot(data, aes(x=Power)) + geom_histogram(stat="count",binwidth = 0.2,  fill="blue", colour="black", ordered=TRUE)
class(Seats)
summary(Seats)
unique(Seats)
boxplot(Seats) # ese valor atípico q sale deberiamos plantearnos q hacer con él, es un valor excesivamente alto
Seats
hist(Seats)
boxplot(Seats, horizontal=TRUE)
s <- hist(Seats)
s
class(New_Price)
summary(New_Price)
unique(New_Price)
class(Price)
summary(Price)
boxplot(Price)
p <- hist(Price)
p
Price
ggplot(data, aes(x=Price)) + geom_histogram(stat="count",binwidth = 0.2,  fill="blue", colour="black", ordered=TRUE)
names(data)
class(Kilometers_Driven)
unique(Kilometers_Driven)
sum(Kilometers_Driven>=55000)
summary(Kilometers_Driven) #7253 es el total
boxplot(Kilometers_Driven) # ese valor atípico q sale deberiamos plantearnos q hacer con él, es un valor excesivamente alto
which(Kilometers_Driven==6500000) #posicion del valor atipico
Kilometers_Driven
kilometers <- Kilometers_Driven[-2329] #quito ese valor, solo por probar, yo le estudiaría aparte
summary(kilometers)
hist(kilometers)
boxplot(kilometers, horizontal=TRUE)
k <- hist(kilometers)
k
ggplot(data, aes(Kilometers_Driven))+geom_histogram(aes(y=..density..), bins=50)+geom_density()+scale_x_log10()
